name: Release
on:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  # ******************  IMPORTANTE  ************************
  # Si el proyecto escala y los 'builds' se vuelven lentos, habilitar REMOTE CACHE:
  # https://turbo.build/repo/docs/ci/github-actions#remote-caching
  #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  #  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  FORCE_COLOR: 3

jobs:
  changelog:
    timeout-minutes: 2
    if: github.event.repository.full_name == github.repository
    name: Changelog PR or Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build Packages
        run: pnpm run build

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          # Note: pnpm install after versioning is necessary to refresh lockfile.
          version: pnpm exec changeset version
          publish: pnpm exec changeset publish
          commit: '[ci] release'
          title: '[ci] release'
        env:
          # Needs access to push to main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Needs access to publish to npm
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          #
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Set legend-transactional Package and Version
        id: set_env
        if: steps.changesets.outputs.published == 'true'
        run: |
          echo "LEGEND_PACKAGE=$(echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[0].name')" >> $GITHUB_ENV
          echo "LEGEND_VERSION=$(echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[0].version')" >> $GITHUB_ENV
      - name: Generate Notification
        id: notification
        # steps.changesets.outputs.publishedPackages -> [{"name":"legend-transactional","version":"0.0.2"}]
        if: steps.changesets.outputs.published == 'true'
        continue-on-error: true
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "Release Notification: ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":tada: *New Release Available* :tada:"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:*\n${{ github.repository }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n${{ github.ref_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit SHA:*\n${{ github.sha }}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Release Details"
                      },
                      "url": "https://github.com/${{ github.repository }}/releases/tag/${{ env.LEGEND_PACKAGE }}%40${{ env.LEGEND_VERSION }}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "npm library"
                      },
                      "url": "https://www.npmjs.com/package/legend-transactional"
                    }
                  ]
                }            
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
